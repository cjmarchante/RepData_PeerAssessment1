qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
qplot(displ,hwy,data=mpg,geom=c("point"))
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
qplot(displ,data=mpg,geom=c("point","smooth"))
qplot(displ,data=mpg
)
qplot(displ,data=mpg,fill=drv)
qplot(hwy,data=mpg,fill=drv)
qplot(hwy,data=mpg,fill=drv,binwidth=5)
qplot(hwy,data=mpg,fill=drv,binwidth=1)
qplot(hwy,data=mpg,fill=drv,binwidth=2)
qplot(hwy,data=mpg,fill=drv,binwidth=30)
qplot(hwy,data=mpg,fill=drv)
qplot(hwy,data=mpg,geom=C("point"))
qplot(hwy,data=mpg,geom="point")
qplot(hwy,data=mpg,geom="line")
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(displ,data=mpg,facets=.~drv)
qplot(displ,data=mpg,facets=.~drv)
qplot(displ,data=mpg,facets=.~drv,binwidth=3)
qplot(displ,data=mpg,facets=drv~.,binwidth=3)
qplot(displ,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~.,binwidth=4)
qplot(hwy,data=mpg,facets=drv~.,binwidth=1)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~2,binwidth=2)
qplot(hwy,data=mpg,facets=drv~1,binwidth=2)
qplot(hwy,data=mpg,facets=drv~12,binwidth=2)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~5,binwidth=2)
str(maacs)
load("/Users/cjmarchante/Downloads/maacs.Rda")
str(maacs)
qplot(eno,data=maacs)
qplot(eno,data=maacs,binwidth=1)
qplot(log(eno),data=maacs,binwidth=1)
qplot(log(eno),data=maacs)
qplot(log(eno),data=maacs,fill=mopos)
qplot(log(eno),data=maacs,geom='density')
qplot(log(eno),data=maacs,geom='density',color=mopo)
qplot(log(eno),data=maacs,geom='density',color=mopos)
qplot(log(pm25),log(eno),data=maacs,geom='density',color=mopos)
qplot(log(pm25),log(eno),data=maacs,color=mopos)
qplot(logpm25, NocturnalSympt, data = maacs, facets = . ~ bmicat, geom =          c("point", "smooth"), method = "lm”)
qplot(logpm25, NocturnalSympt, data = maacs, facets = . ~ bmicat, geom = c("point", "smooth"), method = "lm”)
)
.
qplot(logpm25, NocturnalSympt, data = maacs, facets = .~bmicat, geom = c("point", "smooth"), method = "lm”)
qplot(logpm25, NocturnalSympt, data = maacs, facets = .~bmicat, geom = c("point", "smooth"), method = "lm”)
qplot(logpm25, NocturnalSympt, data = maacs,facets = .~bmicat,geom= c("point", "smooth"), method = "lm”)
1
qplot (logpm25,NocturnalSympt,data=maacs,facets=.~bmicat,geom=c("point","smooth"),method="lm”)
)))
qplot(logpm25,NocturnalSympt,data=maacs,facets=.~bmicat,geom=c("point","smooth"),method="lm”)
qplot(logpm25,NocturnalSympt,data=maacs,facets=.~bmicat,geom=c("point","smooth"))
qplot(logpm25,NocturnalSympt,data=maacs,facets=.~bmicat,geom=c("point","smooth"),method="lm")
qplot(logpm25,NocturnalSympt,data=maacs,facets=.~bmicat)
maacs
str(maacs)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
exit
?par
set.seed(1234)dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
View(dataMatrix)
sample(1:12)
kmeansObj2 <- kmeans(dataMatrix, centers = 3)
par(mfrow = c(1, 2), mar = c(2, 4, 0.1, 0.1))
image(t(dataMatrix)[, nrow(dataMatrix):1], yaxt = "n")
image(t(dataMatrix)[, order(kmeansObj$cluster)], yaxt = "n")
image(t(dataMatrix)[, order(kmeansObj2$cluster)], yaxt = "n")
dataFrame <- data.frame(x, y)
kmeansObj <- kmeans(dataFrame, centers = 3)
names(kmeansObj)
kmeansObj$cluster
image(t(dataMatrix)[, nrow(dataMatrix):1], yaxt = "n")
image(t(dataMatrix)[, order(kmeansObj$cluster)], yaxt = "n")
image(t(dataMatrix)[, order(kmeansObj2$cluster)], yaxt = "n")
image(t(dataMatrix)[, order(kmeansObj2$cluster)], yaxt = "n")
image(t(dataMatrix)[, order(kmeansObj2$cluster)])
image(t(dataMatrix)[, order(kmeansObj2$cluster)], yaxt = "n")
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
resume
resume()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
1
1
swirl()
detach("package:swirl", unload=TRUE)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
detach("package:datasets", unload=TRUE)
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
install.packages(c("curl", "Matrix", "nlme", "survival", "testthat"))
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
getver()
getRversion()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
nmaes(pollution)
names(pollution)
table(pollution$region)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,pollution$region="east")
east<-subset(pollution,region="east")
east<-subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
hist(subset(pollution,region=="west"),col="green")
hist(subset(pollution,region=="west"),col="green")
subset(pollution,region=="west")
hist(subset(pollution,region=="west")$pm25,col="green")
plot()
plot()
plot()
plot()
with(polltion,plot(latitude,pm25))
with(pollution,plot(latitude,pm25))
abline(lwd=2,lty=2)
abline(12,lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
with(pollution,plot(latitude,pm25,col=region))
with(pollution,plot(latitude,pmm,col=region))
plot(pollution$latitude,pmm,col=region)
plot(pollution$latitude,ppm,col=region)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar =
| c(5, 4, 2, 1))
par(mfrow = c(1, 2), mar =c(5, 4, 2, 1))
west<-subset(pollution,region=="west")
plot(west$latitude (x-axis), west$pm25 (y-axis),main="West")
plot(west$latitude, west$pm25,main="West")
plot(west$latitude, west$pm25,main="West")
plot(eastt$latitude, east$pm25,main="East")
plot(east$latitude, east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
title(main="Old Faithful Geyser data")
plot(east$latitude, east$pm25,main="East")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
head(cars)
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state¢region)
table(state$region)
xyplot(Life.Exp ~ Income | region,state,c(4,1))
xyplot(Life.Exp ~ Income | region,data=state,layout=c(4,1))
xyplot(Life.Exp ~ Income | region,data=state,layout=c(2,1))
xyplot(Life.Exp ~ Income | region,data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,mpg)
qplot(displ,hwy,dataset=mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
hist(airquality$Ozone)
table(airquality$month)
table(airquality$Month)
boxplot(Ozone~Month,data=airquality)
boxplot(Ozone~Month,data=airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airquality,Month==5)
points(may$Wind,may$Ozone,pch=2,col="blue"")
points(may$Wind,may$Ozone,pch=2,col="blue)
points(may$Wind,may$Ozone,pch=2,col="blue")
points(may$Wind,may$Ozone,pch="2",col="blue")
points(may$Wind,may$Ozone,pch="17",col="blue")
points(may$Wind,may$Ozone,pch=17,col="blue")
points(may$Wind,may$Ozone,col="blue,pch=17)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legenc
legend
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(median(airquality$Wind),lty=2,lwd=2)
abline(median(airquality$Wind),lty="2"",lwd=2)
abline(median(airquality$Wind),lty="2,lwd=2)
abline(median(airquality$Wind),lty="2",lwd=2)
abline(median(airquality$Wind),lty="2",lwd="2")
abline(median(airquality$Wind),lty=2,lwd=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par("mfrow")=c(1,2)
par("mfrow")<-c(1,2)
par()$mfrow<-c(1,2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.r,main="Ozone and Solar Radiation")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1),
| oma = c(0, 0, 2, 0))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1),oma = c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Solar Temperature")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
dist(dataFrame)
View(dataFrame)
hc <- hclust(distxy)
plot(hc)
hc
plot(as.dendrogram(hc))
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=4,col="red")
abline(h=.4,col="red")
5
5
abline(h=0.5,col="blue")
abline(h=0.05,col="blue")
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(datamatrix,col=cm.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
head(airquality)
xyplot(Ozone~Wind ,data=airquality)
xyplot(Ozone~Wind ,data=airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind ,data=airquality,pch=8,Ozone~Wind, main="Big Apple Data")
xyplot(Ozone~Wind ,data=airquality,pch=8, main="Big Apple Data")
xyplot(Ozone~Wind ,data=airquality,pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month) ,data=airquality)
xyplot(Ozone~Wind|as.factor(Month) ,data=airquality,layout=c(5,1))
xyplot(Ozone~Wind|month ,data=airquality,layout=c(5,1))
xyplot(Ozone~Wind|Month ,data=airquality,layout=c(5,1))
xyplot(Ozone~Wind|Month ,data=airquality,layout=c(5,1))
xyplot(Ozone~Wind|as.factor(Month) ,data=airquality,layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
myedit("plot1.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamond$cut)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color*cut ,data=diamonds,strip=FALSE,pch=20.xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat | color*cut ,data=diamonds,strip=FALSE,pch=20.xlab="myxlab",ylab="myylab",main="mymain")
xyplot(price~carat | color*cut ,data=diamonds,strip=FALSE,pch=20,xlab="myxlab",ylab="myylab",main="mymain")
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",loca=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% (diag %*% t(matv))
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
source('~/Desktop/Coursera/Exploratory Analysis/week 4-project/Plot1.R')
install.packages("leaflet")
library("leaflet", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
source('~/.active-rstudio-document')
m
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
m = m %>% setView(-93.65, 42.0285, zoom = 17)
m
m %>% addMarkers(
c(-71.0382679, -122.1217866), c(42.3489054, 47.6763144), icon = list(
iconUrl = 'http://www.rstudio.com/wp-content/uploads/2014/03/blue-125.png'
), popup = c('RStudio @ Boston', 'RStudio @ Seattle')
)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
setwd("/Users/cjmarchante/gitrepos/RepData_PeerAssessment1")
activity <- read.csv("activity.csv", header = T)
# create a subset with NA removed
activity_nona <- subset(activity, is.na(activity$steps) == F)
library(plyr)
stepsbyday <- ddply(activity_nona, .(date), summarise, stepsbyday=sum(steps))
stepsbyday
hist(as.numeric(stepsbyday$steps), breaks = 20, main="Steps",
xlab="Steps taken each day", ylab = "Frequency", col="green")
qplot(mean(stepsbyday),date, data=stepsbyday)
qplot(date,mean(stepsbyday), data=stepsbyday)
View(activity_nona)
View(activity_nona)
meanstepsbyday<-ddply(activity_nona, .(date), summarise,meanday=mean(steps))
meanstepsbyday
qplot(date,meanday, data=meanstepsbyday)
meanstepsbyday<-ddply(activity_nona, .(interval), summarise,meanday=mean(steps))
meanstepsbyday
qplot(interval,meanday, data=meanstepsbyday)
qplot(interval,meanday, data=meanstepsbyday,type="l")
qplot(interval,meanday, data=meanstepsbyday,geom ="line" )
qplot(interval,meanday, data=meanstepsbyday,geom ="line",xlab=" 5-minute interval",ylab="average number of steps taken" )
meanstepsbyday[which.max(meanstepsbyday$steps),]
View(meanstepsbyday)
meanstepsbyday[which.max(meanstepsbyday$meanday),]
sum(is.na(activity$steps))
newactivity<- activity
for (i in 1:nrow(newactivity)){
if (is.na(newactivity$steps[i])){
newactivity$steps[i] <- meanstepsbyday$meanday[which(imputed$interval[i] == newactivity$interval)]}
}
newactivity <- arrange(newactivity, interval)
newactivity<- activity
for (i in 1:nrow(newactivity)){
if (is.na(newactivity$steps[i])){
newactivity$steps[i] <- meanstepsbyday$meanday[which(newactivity$interval[i] == newactivity$interval)]}
}
newactivity <- arrange(newactivity, interval)
View(newactivity)
newactivity<- activity
for (i in 1:nrow(newactivity)){
if (is.na(newactivity$steps[i])){newactivity$steps[i] <- meanstepsbyday$meanday[which(newactivity$interval[i] == newactivity$interval)]}
}
newactivity <- arrange(newactivity, interval)
hist(as.numeric(newactivity$steps), breaks = 20, main="Steps", xlab="Steps taken each day", ylab = "Frequency", col="green")
newstepsbyday <- ddply(newactivity, .(date), summarise, stepsbyday=sum(steps))
hist(as.numeric(newactivity$steps), breaks = 20, main="Steps", xlab="Steps taken each day", ylab = "Frequency", col="green")
hist(as.numeric(newstepsbyday$steps), breaks = 20, main="Steps", xlab="Steps taken each day", ylab = "Frequency", col="green")
hist(as.numeric(newstepsbyday$steps), breaks = 10, main="Steps", xlab="Steps taken each day", ylab = "Frequency", col="green")
hist(as.numeric(newstepsbyday$steps), breaks = 20, main="Steps", xlab="Steps taken each day", ylab = "Frequency", col="green")
warnings()
newactivity<- activity
for (i in 1:nrow(newactivity)){if (is.na(newactivity$steps[i])){newactivity$steps[i] <- meanstepsbyday$meanday[which(newactivity$interval[i] == newactivity$interval)]}
}
newactivity <- arrange(newactivity, interval)
newactivity<- activity
for (i in 1:nrow(newactivity)){if (is.na(newactivity$steps[i])){newactivity$steps[i] <- meanstepsbyday$meanday[which(newactivity$interval[i] == 1)]}
}
newactivity <- arrange(newactivity, interval)
newactivity<- activity
for (i in 1:nrow(newactivity)){if (is.na(newactivity$steps[i])){newactivity$steps[i] <- meanstepsbyday$meanday[which(newactivity$interval[i] == 1)]}
}
newactivity <- arrange(newactivity, interval)
newactivity<- activity
for (i in 1:nrow(newactivity)){if (is.na(newactivity$steps[i])){newactivity$steps[i] <- meanstepsbyday$meanday[which(newactivity$interval[i] == 1)]}
}
newactivity <- arrange(newactivity, interval)
newactivity<- activity
for (i in 1:nrow(newactivity)){if (is.na(newactivity$steps[i])){newactivity$steps[i] <- 1}
}
newactivity <- arrange(newactivity, interval)
newactivity<- activity
for (i in 1:nrow(newactivity)){if (is.na(newactivity$steps[i])){newactivity$steps[i] <- 1}
}
newactivity <- arrange(newactivity, interval)
newactivity<- activity
for (i in 1:nrow(newactivity)){if (is.na(newactivity$steps[i])){newactivity$steps[i] <- meanstepsbyday$meanday[1]}
}
newactivity <- arrange(newactivity, interval)
newactivity<- activity
for (i in 1:nrow(newactivity)){if (is.na(newactivity$steps[i])){newactivity$steps[i] <- meanstepsbyday$meanday[which(newactivity$interval[i] == meanstepsbyday$interval)]}
}
newactivity <- arrange(newactivity, interval)
View(stepsbyday)
mean(stepsbyday$steps)
median(stepsbyday$steps)
median(newstepsbyday$steps)
mean(newstepsbyday$steps)
View(meanstepsbyday)
xyplot(steps ~ interval | weekdays, data = average, layout = c(1, 2), type="l", xlab = "Interval", ylab = "Number of steps")
library(lattice)
xyplot(steps ~ interval | weekdays, data = average, layout = c(1, 2), type="l", xlab = "Interval", ylab = "Number of steps")
average <- ddply(newactivity, .(interval, weekdays), summarise, steps=mean(steps))
#changing from spanish to english
Sys.setlocale("LC_TIME", "English")
newactivity$weekdays <- weekdays(as.Date(newactivity$date))
newactivity$weekdays <- ifelse(newactivity$weekdays %in% c("Saturday", "Sunday"),"weekend", "weekday")
average <- ddply(newactivity, .(interval, weekdays), summarise, steps=mean(steps))
library(lattice)
xyplot(steps ~ interval | weekdays, data = average, layout = c(1, 2), type="l", xlab = "Interval", ylab = "Number of steps")
View(average)
#changing from spanish to english
Sys.setlocale("LC_TIME", "English")
newactivity$weekdays <- weekdays(as.Date(newactivity$date))
#newactivity$weekdays <- ifelse(newactivity$weekdays %in% c("Saturday", "Sunday"),"weekend", "weekday")
#changing from spanish to english
Sys.setlocale("LC_TIME", "English")
newactivity$weekdays <- weekdays(as.Date(newactivity$date))
newactivity$weekdays <- ifelse(newactivity$weekdays %in% c("Sabado", "Domingo"),"weekend", "weekday")
#changing from spanish to english
Sys.setlocale("LC_TIME", "English")
newactivity$weekdays <- weekdays(as.Date(newactivity$date))
newactivity$weekdays <- ifelse(newactivity$weekdays %in% c("Sabado", "Domingo"),"weekend", "weekday")
View(newactivity)
weekdays(as.Date(newactivity$date))
#changing from spanish to english
Sys.setlocale("LC_TIME", "English")
newactivity$weekdays <- weekdays(as.Date(newactivity$date))
newactivity$weekdays <- ifelse(newactivity$weekdays %in% c("sábado", "domingo"),"weekend", "weekday")
